# IPython log file

cd Desktop/SageCode/ThesisWorkExamples/
cd ExQneg23p5Prec60/
ls
cd ComplexLValuesNew/
ls
load("codeForLValues.sage")
load("codeForLValues.sage")
load("codeForLValues.sage")
len(orderedStarkUnitsData)
#[Out]# 16
load("codeForLValues.sage")
StarkLogsNum[1]
#[Out]# -1.06066262949520485160285166695182231132239433402328086716017211352431425317996142781242139498302932482901622781923202406352389072888877169435858132808
reorderPartZetas
#[Out]# [0.761503724321360495031139391953811604026150524257818556529545383024703044563412143850178201291193847854922945478095664348412169799602009924131649094463, -13.6321364246544506935947578209667139770111681153683603058630472555388960381235663234968917470492791909479828902262558331184399349570700533019116286177, 2.07058705116460553908263015008212923203177053574189683459589867621035402169414609109186729649418924457710136719147629034927648060092159059579544062129, 1.09918434404708743016656994834915410976923632968621683187143477932548933060766095296917215524142081016117028684392393046949836240564491647889100548525, 8.09142339268729685471365899735543139165840937141391036095352052550417065355068937095554021592929567755482198769104438505152891692157686010345991679927, -4.39527082330110320747933244335892614350288162993122252847972655084758287264127100549319789955190506884457622806041854881804859098723060099274868155006, 6.18583335671199322147238470310513968369605336112557283054850688536592960090151565067097213696906665784290226136263579229566748798698972893995539671005, -1.06066262949520485160285166695182231132239433402328086716017211352431425317996142781242139498302932482901622781923202406352389072888877169435858112442, -0.792741211772488013167455255724423892536495781783266534233309576002543344335663069971354136988662520549586045569902722635835173418224340364762849036015, -1.54659660457729752382350467029615497585988296965632062258794653646566811845227791202413258353864935441969006293479805967798383808197069208771890161704, -4.39527082330110320747933244335892614350288162993122252847972655084758287264127100549319789955190506884457622806041854881804859098723060099274868155002, 6.18583335671199322147238470310513968369605336112557283054850688536592960090151565067097213696906665784290226136263579229566748798698972893995539671001, -1.06066262949520485160285166695182231132239433402328086716017211352431425317996142781242139498302932482901622781923202406352389072888877169435858112433, -0.792741211772488013167455255724423892536495781783266534233309576002543344335663069971354136988662520549586045569902722635835173418224340364762849036125, -1.54659660457729752382350467029615497585988296965632062258794653646566811845227791202413258353864935441969006293479805967798383808197069208771890161707]
load("codeForLValues.sage")
len(orderedStarkUnitsData)
#[Out]# 15
save(orderedStarkUnitsData, "orderedStarkUnitsData")
ls
cd ..
ls
cd ../
ls
cd ../
ls
cd OverconvergentModularSymbols/
ls
load("master.sage")
cd ../
cd ThesisWorkExamples/ExQneg23p5Prec60/
ls
cd OMSHeckeEigensymbols/
ls
cd ../
cd HeckeEigenSymbs(LookInto)/
ls
plusHeckeSymbs = load("plusHeckeSymbs.sobj")
len(plusHeckeSymbs)
#[Out]# 2
phi1 = plusHeckeSymbs[0]
phi1.is_Tq_eigen(2)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
5^(57)
#[Out]# 6938893903907228377647697925567626953125
phi1.is_Tq_eigen(3)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi1.is_Tq_eigen(5)
#[Out]# [True, 1, 57]
phi2 = plusHeckeSymbs[1]
phi2.is_Tq_eigen(2)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi2.is_Tq_eigen(3)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi2.is_Tq_eigen(5)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi2.is_Tq_eigen(7)
#[Out]# [True, 0, 57]
phi1.is_Tq_eigen(7)
#[Out]# [True, 0, 57]
F
#[Out]# Number Field in a with defining polynomial x^2 + 23
H
#[Out]# Number Field in b with defining polynomial y^3 - y + 1 over its base field
F.ideal(2).factor()
#[Out]# (Fractional ideal (2, 1/2*a - 1/2)) * (Fractional ideal (2, 1/2*a + 1/2))
H.ideal(2).factor()
#[Out]# (Fractional ideal ((-9/46*a + 1/2)*b^2 + (-1/23*a + 1)*b + 3/23*a - 1)) * (Fractional ideal ((-3/23*a - 1)*b^2 + (-9/46*a - 1/2)*b + 2/23*a))
F.ideal(3).factor()
#[Out]# (Fractional ideal (3, 1/2*a - 1/2)) * (Fractional ideal (3, 1/2*a + 1/2))
H.ideal(3).factor()
#[Out]# (Fractional ideal ((-4/23*a - 1)*b^2 - 6/23*a*b + 13/46*a + 1/2)) * (Fractional ideal ((-13/46*a + 1/2)*b^2 + (-4/23*a + 1)*b + 1/46*a - 1/2))
F.ideal(7).factor()
#[Out]# Fractional ideal (7)
H.ideal(7).factor()
#[Out]# (Fractional ideal ((-3/46*a + 1/2)*b^2 + (-8/23*a + 1)*b + 1/23*a)) * (Fractional ideal ((-3/46*a - 1/2)*b^2 + (-8/23*a - 1)*b + 1/23*a)) * (Fractional ideal (b^2 + 2*b - 1))
minusHeckeSymbs = load("minusHeckeSymbs.sobj")
len(minusHeckeSymbs)
#[Out]# 2
phi1 = minusHeckeSymbs[0]
phi1.is_Tq_eigen(2)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi1.is_Tq_eigen(3)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi1.is_Tq_eigen(5)
#[Out]# [True, 1, 57]
phi1.is_Tq_eigen(7)
#[Out]# [True, 0, 57]
phi2 = minusHeckeSymbs[1]
phi2.is_Tq_eigen(2)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi2.is_Tq_eigen(3)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi2.is_Tq_eigen(5)
#[Out]# [True, 6938893903907228377647697925567626953124, 57]
phi2.is_Tq_eigen(7)
#[Out]# [True, 0, 57]
logstop